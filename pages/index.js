import Head from 'next/head';
// import { Inter } from "@next/font/google";
import { sanityClient } from '../src/config/sanityClient';
import { Filter, HomeCard, Main } from '../src/components';
import { useRouter } from 'next/router';

// const inter = Inter({ subsets: ["latin"] });
export default function Home({ activities, residences }) {
  const router = useRouter()
  const { arrival, depart, location, origin, travelers} = router.query
  // console.log("ðŸš€ ~ residences", residences)

  const filterQuery = residences
  .filter((item)=>(
    item.location.toLowerCase().includes(location?.toLowerCase()) &&
    (item.arrival === '' || item.arrival >= travelers)
  ))
  return (
    <>
      <Head>
        <title>Home | {process.env.NEXT_PUBLIC_SITE_NAME}</title>
        <meta name="description" content="Generated by Mamshouse " />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <script src="https://js.stripe.com/v3/"></script>
      </Head>
      <Main />
      <section className="md:-mt-32 -mt-12 p-1" >
        <Filter />
      </section>
      <section className="md:mt-12 mt-6 mb-20" id="homecard">
        {
          filterQuery.map((item,i)=>{
            return(
              <HomeCard key={i} data={item}/>
            )
          })
        }

        {
          !filterQuery.length > 0 &&
          residences.slice(0,1).map((item,i)=>{
            return(
              <HomeCard data={item} key={i}/>
            )
          })
        }
      </section>
      
    </>
  );
}



const NotFound = () =>{
  return(
    <h2 className='font-bangla-mn mt-20 container mx-auto text-2xl md:text-4xl'>Result Not Found</h2> 
  )
}




export async function getServerSideProps(pageContext) {
  const locale = pageContext.query.lang || 'en';
  const residences = await sanityClient.fetch(
    `*[_type == "residences"]{
        _id,
        departure,
        travelers,
        arrival,
        content,
        "title": title[$locale],
        "location": location[$locale], 
        slug,
        feature_poster{
          asset->{
            url
          }
        },
        feature_banner{
          asset->{
            url
          }
        },
        "short_info" : short_info[$locale],
        gallery[]{
          asset->{
            url
          }
        },
        price_per_unit,
         "description" : description[$locale],
        features[]{
          title,
          icon{
            asset->{
              url
            }
          }
        },
        

  }`,
    { locale }
  );

  return {
    props: {
      residences,
    },
  };
}
